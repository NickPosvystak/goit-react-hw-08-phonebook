{"version":3,"file":"static/js/527.0693bd2d.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/Contact.styled.js","components/ContactForm/ContactForm.jsx","components/Contacts.jsx/StyledContacts.js","components/Contacts.jsx/Contacts.jsx","components/Filter/StyledFilter.js","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nconst selectPhonebook = state => state.phonebook;\n\nexport const selectContacts = createSelector(\n  selectPhonebook,\n  phonebook => phonebook.contacts\n);\n\nexport const selectContactsIsLoading = createSelector(\n  selectPhonebook,\n  phonebook => phonebook.isLoading\n);\n\nexport const selectContactsError = createSelector(\n  selectPhonebook,\n  phonebook => phonebook.error\n);\n\nexport const selectContactsFilterTerm = createSelector(\n  selectPhonebook,\n  phonebook => phonebook.filterTerm\n);\n\n// filter\n\nconst selectFilter = state => state.filter;\n\nexport const selectFilterTerm = createSelector(\n  selectFilter,\n  filter => filter.filterTerm\n);\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  flex-direction: column;\n  flex-wrap: wrap;\n  padding: 10px;\n  /* border: 2px solid black; */\n  border-radius: 6px;\n  justify-content: center;\n\n  margin-right: auto;\n  margin-left: auto;\n\n \n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n\n  margin-bottom: 15px;\n`;\n\nexport const StyledInput = styled.input`\n  flex: 1 0 140px;\n  width: 100%;\n  margin-bottom: 10px;\n  border-radius: 6px;\n  border: 0;\n`;\nexport const StyledBtn = styled.button`\n  border-radius: 6px;\n  flex: 1 0 50px;\n\n  // Style\n  background-image: linear-gradient(-180deg, #37aee2 0%, #1e96c8 100%);\n  box-sizing: border-box;\n  color: #ffffff;\n  display: flex;\n  font-size: 16px;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem 1.75rem;\n  text-decoration: none;\n  width: 100%;\n  border: 0;\n  cursor: pointer;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n\n  @media only screen and (min-width: 768px) {\n    margin-top: 10px;\n    padding: 1rem 2rem;\n  }\n  &:hover {\n    background-image: linear-gradient(-180deg, #1d95c9 0%, #17759c 100%);\n  }\n`;\n","import { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/ContactsReducer';\nimport { selectContacts } from 'redux/selectors';\nimport { StyledBtn, StyledForm, StyledInput, Title } from './Contact.styled';\n\nexport const ContactForm = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n\n  const onSubmit = data => {\n\n    contacts &&\n    contacts.some(\n      contact => contact.name.toLowerCase() === data.name.toLowerCase()\n    )\n      ? alert(`${data.name} is already in contacts`)\n      : dispatch(addContact(data));\n\n\n    reset();\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit(onSubmit)}>\n      <Title>Phonebook</Title>\n      <label>\n        <StyledInput\n          {...register('name', { required: true })}\n          type=\"text\"\n          placeholder=\" Rosa Andersen\"\n        />\n        {errors.name && <span>This field is required</span>}\n      </label>\n      <label>\n        <StyledInput\n          {...register('number', {\n            required: true,\n          })}\n          type=\"number\"\n          placeholder=\" 123456789\"\n        />\n        {errors.number && <span>This field is required</span>}\n      </label>\n\n      <StyledBtn type=\"submit\">Add contact</StyledBtn>\n    </StyledForm>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n\n  margin-right: auto;\n\n  margin-left: auto;\n`;\n\nexport const StyledItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #fff;\n\n  padding: 4px 8px;\n  margin-bottom: 15px;\n\n  border-radius: 4px;\n\n  &:hover {\n    box-shadow: rgba(45, 35, 66, 0.4) 0 4px 8px,\n      rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;\n    transform: translateY(-2px);\n  }\n\n  p {\n    margin-left: auto;\n    margin-right: 20px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/ContactsReducer';\nimport {\n  selectContacts,\n  selectContactsIsLoading,\n  selectFilterTerm,\n} from 'redux/selectors';\nimport { StyledItem, StyledList } from './StyledContacts';\n\nexport const Contacts = ({ contacts }) => {\n  const contactsItems = useSelector(selectContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n\n  const filter = useSelector(selectFilterTerm);\n\n  const dispatch = useDispatch();\n\n  const onDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const filterContacts = contactsItems.filter(contactsItem =>\n    contactsItem.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <div>\n      {isLoading && <p>Loading...</p>}\n      <StyledList>\n        {Array.isArray(filterContacts) &&\n          filterContacts.map(({ id, name, number }) => {\n            return (\n              <StyledItem key={id}>\n                <h3>{name}</h3>\n                <p>{number}</p>\n                <button\n                  onClick={() => {\n                    onDeleteContact(id);\n                  }}\n                >\n                  ‚ùå\n                </button>\n              </StyledItem>\n            );\n          })}\n      </StyledList>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledFilter = styled.div`\n  padding-left: 10px;\n  input {\n    padding: 4px 8px;\n    border-radius: 6px;\n    outline-color: #0000ff;\n    margin-bottom: 15px;\n    border: 0;\n    width: 200px;\n  }\n  h3 {\n    margin-bottom: 10px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { StyledFilter } from './StyledFilter';\nimport { selectFilterTerm } from 'redux/selectors';\nimport { setFilterTerm } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectFilterTerm);\n\n  const handleFilter = event => {\n    dispatch(setFilterTerm(event.target.value));\n  };\n\n  return (\n    <StyledFilter>\n      <h3>Find contact by name</h3>\n      <input\n        type=\"text\"\n        placeholder=\"Search contact\"\n        value={filter}\n        onChange={handleFilter}\n      />\n    </StyledFilter>\n  );\n};\nexport default Filter;\n","import styled from \"styled-components\";\n\nexport const StyledTitle = styled.h2`\npadding-left: 10px;\npadding-top: 10px;\n`","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Contacts } from 'components/Contacts.jsx/Contacts';\nimport Filter from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/ContactsReducer';\nimport {\n  selectContacts,\n  selectContactsError,\n  selectContactsIsLoading,\n} from 'redux/selectors';\nimport { StyledTitle } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm />\n      <StyledTitle>Contacts</StyledTitle>\n\n      {isLoading && !error && <h3>Loading...</h3>}\n      {contacts && contacts.length !== 0 ? (\n        <>\n          <Filter />\n          <Contacts />\n        </>\n      ) : (\n        <p>There is no any contacts here yet</p>\n      )}\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectPhonebook","state","phonebook","selectContacts","createSelector","contacts","selectContactsIsLoading","isLoading","selectContactsError","error","selectFilterTerm","filterTerm","filter","StyledForm","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","StyledInput","_templateObject3","StyledBtn","_templateObject4","ContactForm","_useForm","useForm","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","useSelector","_jsxs","onSubmit","data","some","contact","name","toLowerCase","alert","concat","addContact","children","_jsx","_objectSpread","required","type","placeholder","number","StyledList","StyledItem","Contacts","_ref","contactsItems","filterContacts","contactsItem","includes","Array","isArray","map","_ref2","id","onClick","contactId","deleteContact","StyledFilter","value","onChange","event","setFilterTerm","target","StyledTitle","useEffect","fetchContacts","_Fragment","length","Filter"],"sourceRoot":""}